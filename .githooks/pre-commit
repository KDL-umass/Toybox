#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".
#echo "Executing pre-commit hook from `realpath -- $0`"

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi


# Cargo format
cargo fmt -- --emit files

# pub struct and pub enum must be in types.rs
for tb_game in `ls | grep tb`; do
	game=`python -c "print(\"$tb_game\"[3:])"`
	if [[ ! -z $(grep "pub struct" $tb_game/src/lib.rs) ]]; then 
		echo "Found a public struct in $tb_game/src/lib.rs"
		exit -1
	fi
	if [[ ! -z $(grep "pub struct" $tb_game/src/$game.rs) ]]; then 
		echo "Found a public struct in $tb_game/src/$game.rs"
		exit -1 
	fi
	if [[ ! -z $(grep "pub enum" $tb_game/src/lib.rs) ]]; then 
		echo "Found a public enum in $tb_game/src/lib.rs"
		exit -1
	fi
	if [[ ! -z $(grep "pub enum" $tb_game/src/$game.rs) ]]; then 
		echo "Found a public enum in $tb_game/src/$game.rs"
		exit -1
	fi
done
